openapi: 3.0.0
info:
  title: SDK WA
  version: 1.0.0
servers:
  - url: http://api.sdkwa.pro
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: |
        Pass the required `apiTokenInstance` parameter in the Authorization header as a Bearer token.
        Example: `Authorization: Bearer <apiTokenInstance>`
security:
  - bearerAuth: []
tags:
  - name: Account
  - name: Sending
  - name: Receiving
  - name: Receiving > Receiving notification
  - name: Receiving > Get files
  - name: Journals
  - name: Queues
  - name: Groups
  - name: Read mark
  - name: Service methods
  - name: instances management
paths:
  /whatsapp/{idInstance}/getSettings:
    get:
      tags:
        - Account
      summary: Get account settings
      description: |-
        The method gets current account settings.

        | Parameter                         | Type      | Description                                                                                                 |
        | --------------------------------- | --------- | ----------------------------------------------------------------------------------------------------------- |
        | `wid`                             | **string**| Account ID in WhatsApp                                                                                      |
        | `countryInstance`                 | **string**| Account country code in accordance with standard [ISO 3166-2](https://ru.wikipedia.org/wiki/ISO_3166-2)     |
        | `typeAccount`                     | **string**| Account type, possible variants: `WA_DESKTOP`, `WA_MOBILE`                                                  |
        | `releaseType`                     | **string**| Release type, possible variants: `STABLE`, `LATEST`                                                         |
        | `webhookUrl`                      | **string**| URL to receive incoming notifications                                                                       |
        | `webhookUrlToken`                 | **string**| Token for connecting to your webhook server                                                                 |
        | `delaySendMessagesMilliseconds`   | **integer**| [Min message sending delay](https://file+.vscode-resource.vscode-cdn.net/d:/work/stroy/docs/en/docs/api/send-messages-delay.md) in milliseconds |
        | `delaySendMessagesMaxMs`          | **integer**| [Max message sending delay](https://file+.vscode-resource.vscode-cdn.net/d:/work/stroy/docs/en/docs/api/send-messages-delay.md) in milliseconds |
        | `markIncomingMessagesReaded`      | **string**| Mark incoming messages as read or not, possible variants: `yes`, `no`. Ignored if markIncomingMessagesReadedOnReply is 'yes'. |
        | `markIncomingMessagesReadedOnReply`| **string**| Mark incoming messages as read when sending a message to the chat via API, possible variants: `yes`, `no`. If 'yes', then markIncomingMessagesReaded setting is ignored. |
        | `outgoingWebhook`                 | **string**| Get notifications about outgoing messages sending / delivering / reading status, possible variants: `yes`, `no` |
        | `outgoingMessageWebhook`          | **string**| Get notifications about messages sent from phone, possible variants: `yes`, `no`                            |
        | `stateWebhook`                    | **string**| Get notifications about changes in the account authorization status, possible variants: `yes`, `no`         |
        | `incomingWebhook`                 | **string**| Get notifications about incoming messages and files, possible variants: `yes`, `no`                         |
        | `deviceWebhook`                   | **string**| Get notifications about the device (phone) and battery level, possible variants: `yes`, `no`                |
        | `statusInstanceWebhook`           | **string**| Get notifications about the account socket connection status change, possible variants: `yes`, `no`         |
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.24.0 (Ubuntu)
            Date:
              schema:
                type: string
                example: Thu, 10 Oct 2024 10:22:47 GMT
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '560'
            Connection:
              schema:
                type: string
                example: keep-alive
            Vary:
              schema:
                type: string
                example: Access-Control-Request-Headers
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri 'self';font-src 'self' https:
                  data:;form-action 'self';frame-ancestors 'self';img-src 'self'
                  data:;object-src 'none';script-src 'self';script-src-attr
                  'none';style-src 'self' https:
                  'unsafe-inline';upgrade-insecure-requests
            Cross-Origin-Embedder-Policy:
              schema:
                type: string
                example: require-corp
            Cross-Origin-Opener-Policy:
              schema:
                type: string
                example: same-origin
            Cross-Origin-Resource-Policy:
              schema:
                type: string
                example: same-origin
            X-DNS-Prefetch-Control:
              schema:
                type: string
                example: 'off'
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            Origin-Agent-Cluster:
              schema:
                type: string
                example: '?1'
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            X-XSS-Protection:
              schema:
                type: integer
                example: '0'
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: GET,PUT,POST,DELETE
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Content-Type, Accept
            ETag:
              schema:
                type: string
                example: W/"26c-4dwUF3WcorkkO2ZkC+B5NLUfud4"
          content:
            application/json:
              schema:
                type: object
              example:
                wid: ''
                countryInstance: ''
                typeAccount: WA_DESKTOP
                webhookUrl: http://184.107.167.193:4001/webhook
                webhookUrlToken: ''
                delaySendMessagesMilliseconds: 1000
                delaySendMessagesMaxMs: 1000
                markIncomingMessagesReaded: 'yes'
                markIncomingMessagesReadedOnReply: 'no'
                sharedSession: 'no'
                proxyInstance: system proxy
                outgoingWebhook: 'no'
                outgoingMessageWebhook: 'no'
                outgoingAPIMessageWebhook: 'no'
                incomingWebhook: 'yes'
                deviceWebhook: 'no'
                statusInstanceWebhook: 'yes'
                stateWebhook: 'no'
                enableMessagesHistory: 'yes'
                keepOnlineStatus: 'no'
  /whatsapp/{idInstance}/setSettings:
    post:
      tags:
        - Account
      summary: Set account settings
      description: |-
        The method sets current account settings.

        | Parameter                       | Type     | Mandatory | Description                                                                                       |
        |---------------------------------|----------|-----------|---------------------------------------------------------------------------------------------------|
        | `countryInstance`               | string   | No        | Account country code in accordance with [ISO 3166-2](https://ru.wikipedia.org/wiki/ISO_3166-2)    |
        | `webhookUrl`                    | string   | No        | URL for sending notifications. To disable notifications, specify an empty string                  |
        | `webhookUrlToken`               | string   | No        | Token to access your notification server, or empty string if not required                         |
        | `delaySendMessagesMilliseconds` | integer  | No        | [Min message sending delay](../send-messages-delay.md) in milliseconds                            |
        | `delaySendMessagesMaxMs`        | integer  | No        | [Max message sending delay](../send-messages-delay.md) in milliseconds                            |
        | `markIncomingMessagesReaded`    | string   | No        | Mark incoming messages as read or not, possible values: `yes`, `no`. Ignored if ...OnReply is 'yes'|
        | `markIncomingMessagesReadedOnReply` | string | No        | Mark incoming messages as read when posting a message via API, values: `yes`, `no`. If 'yes', ... |
        | `outgoingWebhook`               | string   | No        | Get notifications about outgoing messages sending/delivering/reading statuses: `yes`, `no`        |
        | `outgoingMessageWebhook`        | string   | No        | Get notifications about messages sent from the phone: `yes`, `no`                                 |
        | `outgoingAPIMessageWebhook`     | string   | No        | Get notifications about messages sent from the API: `yes`, `no`                                   |
        | `stateWebhook`                  | string   | No        | Get notifications about the account authorization state change: `yes`, `no`                       |
        | `incomingWebhook`               | string   | No        | Get notifications about incoming messages and files: `yes`, `no`                                  |
        | `deviceWebhook`                 | string   | No        | Get notifications about the device (phone) and battery level: `yes`, `no`                         |
        | `statusInstanceWebhook`         | string   | No        | Get notifications about the account socket connection status change: `yes`, `no`                  |
        | `keepOnlineStatus`              | string   | No        | Set status "Online", possible values: `yes`, `no`                                                 |
        | `proxyInstance`                 | string   | No        | Specify the client's own proxy address in format ip:port:login:password                           |
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                webhookUrl: ''
                webhookUrlToken: ''
                delaySendMessagesMilliseconds: 1000
                markIncomingMessagesReaded: 'no'
                markIncomingMessagesReadedOnReply: 'no'
                outgoingWebhook: 'yes'
                outgoingMessageWebhook: 'yes'
                outgoingAPIMessageWebhook: 'no'
                incomingWebhook: 'yes'
                stateWebhook: 'yes'
                keepOnlineStatus: 'no'
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.10.3
            Date:
              schema:
                type: string
                example: Tue, 21 Apr 2020 13:16:18 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: keep-alive
          content:
            application/json:
              schema:
                type: object
              example:
                saveSettings: true
  /whatsapp/{idInstance}/getStateInstance:
    get:
      tags:
        - Account
      summary: Get account state
      description: >-
        The method gets the account state.
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.10.3
            Date:
              schema:
                type: string
                example: Fri, 17 Apr 2020 14:31:40 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '35'
            Connection:
              schema:
                type: string
                example: keep-alive
          content:
            application/json:
              schema:
                type: object
              example:
                stateInstance: authorized
  /whatsapp/{idInstance}/getWarmingPhoneStatus:
    get:
      tags:
        - Account
      summary: Get warming phone status
      description: >-
        The method gets the account warming state.
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response with warming phone status.
          content:
            application/json:
              schema:
                type: object
                properties:
                  warmingType:
                    type: string
                    description: |
                      Account warming option.
                      Possible values:
                        - USER_PHONES: Warming with only user phones
                        - USER_AND_WORKERS_PHONES: Warming with user phones and phones from phone base
                  status:
                    type: number
                    description: Account warming indicator level percent.
                  isWarmingRunning:
                    type: string
                    description: |
                      Account warming state.
                      Possible values:
                        - NOT_STARTED: Warming for account not started
                        - STARTED: Warming is started.
                  forWarming:
                    type: number
                    description: Phones for warming.
                  notWarmed:
                    type: number
                    description: Not warmed phones.
                  warmed:
                    type: number
                    description: Phones that were already warmed.
              example:
                warmingType: USER_AND_WORKERS_PHONES
                status: 0.88
                isWarmingRunning: STARTED
                forWarming: 1
                notWarmed: 2
                warmed: 0
  /whatsapp/{idInstance}/reboot:
    get:
      tags:
        - Account
      summary: Reboot account
      description: The method reboots the whatsapp account.
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.10.3
            Date:
              schema:
                type: string
                example: Fri, 17 Apr 2020 14:29:41 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '22'
            Connection:
              schema:
                type: string
                example: keep-alive
          content:
            application/json:
              schema:
                type: object
              example:
                isReboot: true
  /whatsapp/{idInstance}/logout:
    get:
      tags:
        - Account
      summary: Logout account. 
      description: The method logout the account from whatsapp. 
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.10.3
            Date:
              schema:
                type: string
                example: Fri, 17 Apr 2020 14:24:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '22'
            Connection:
              schema:
                type: string
                example: keep-alive
          content:
            application/json:
              schema:
                type: object
              example:
                isLogout: true
  /whatsapp/{idInstance}/qr:
    get:
      tags:
        - Account
      summary: Get QR code
      description: |
        The method retrieves a QR code.
        To authorize your account, scan the QR code using the WhatsApp Business app on your phone.
        Alternatively, you can obtain a QR code and complete authorization from your profile.
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.24.0 (Ubuntu)
            Date:
              schema:
                type: string
                example: Thu, 10 Oct 2024 13:29:54 GMT
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '6310'
            Connection:
              schema:
                type: string
                example: keep-alive
            Vary:
              schema:
                type: string
                example: Access-Control-Request-Headers
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            X-DNS-Prefetch-Control:
              schema:
                type: string
                example: 'off'
            Expect-CT:
              schema:
                type: string
                example: max-age=0
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            X-XSS-Protection:
              schema:
                type: integer
                example: '0'
            ETag:
              schema:
                type: string
                example: W/"18a6-t8GmZk9fNlyTxVDMtD6nyHE9bQQ"
          content:
            application/json:
              schema:
                type: object
              example:
                type: qrCode
                message: >-
                  iVBORw0KGgoAAAANSUhEUgAAARQAAAEU534Ml5AAAlrrgoe11rrkYa21LnlYa61LHtZa65utda65GGttS55WGutSxutyhrbUueVhrrUse1lrrkoe11rrkYa21LnlYa61LfvhI5W+q+E0qU8UXKicVb6hMFV+oTBUnKlPFGypTxaQyVbyh8kbFGypvVEwqJxWTyt9U8cXDWmtd8rDWWpc8rLXWJT9cVnGTyhcqb1S8oTJVnFRMKlPFpDJVTConFZPKicpJxRsqJypvqEwVU8UbKicVb1T8poqbVG56WGutSx7WWuuSh7XWuuSHX6byRsUbKlPFFyonFVPFGypfqJxUTCpTxaTyhspUMamcVEwqU8WkMlW8ofKFyknFicpvUnmj4jc9rLXWJQ9rrXXJw1prXfLD+qsqbqqYVKaKNyomlanipOJE5URlqviiYlKZKiaVqeJE5Y2KSeX/ycNaa13ysNZalzystdYlP/yfUZkq3lA5UZkqTiomlZtUTlTeUDlReaPipOILlaliUnmj4kTlC5Wp4v/Jw1prXfKw1lqXPKy11iU//LKKv6niDZWpYlKZKt5QmSomlZOKSeWNiknlpOINlaliUpkqJpUvKiaVqWJSOVGZKqaKN1Smipsq/iUPa611ycNaa13ysNZal/xwmcq/RGWquEllqviiYlKZKiaVqWJSmSomlROVqeI3VUwqU8WkMlVMKlPFpDJVTCpTxaQyVbyhMlWcqPzLHtZa65KHtda65GGttS754aOKf1nFScUXFZPKTRVvqNxU8YbKVDGpTBWTyonKFypvVNykMlWcVPwveVhrrUse1lrrkoe11rrE/uADlaliUrmp4kTlpOJE5Y2KL1SmihOVqeILlZsqJpU3KiaVqeJE5aTiRGWqmFRuqjhRuaniNz2stdYlD2utdcnDWmtd8sNlKl9UvKFyU8WkMlVMKm9UnKhMFVPFicobFScqU8WkclIxqUwVJxW/SWWquKniDZWTihOVE5Wp4qaHtda65GGttS55WGutS374qGJSOamYVCaVk4q/qWJSOan4omJSmSreqJhUTlSmikllqrhJ5Y2KqeJEZao4UZkqJpU3VKaKk4pJZaqYKt5QmSq+eFhrrUse1lrrkoe11rrkh8sqTlSmijdUvlCZKiaVqeJvUnlDZao4qTipmFSmihOVLyomlS9UTlSmihOVqWJ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
  /whatsapp/{idInstance}/requestRegistrationCode:
    post:
      tags:
        - Account
      summary: Request registration code
      description: The method is designed to receive a phone number registration code via SMS or a call.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phoneNumber:
                  type: number
                  description: Phone number with country code, for example 7123456789
                method:
                  type: string
                  enum: [sms, voice]
                  description: Request type. `voice` or `sms` is supported.
              required:
                - phoneNumber
                - method
            example:
              phoneNumber: 7123456789
              method: sms
      responses:
        '200':
          description: Successful response with registration code request status.
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      flash_type:
                        type: number
                        description: System parameter
                      login:
                        type: string
                        description: Phone number
                      length:
                        type: string
                        description: Code length. The default value is 6. Present only for successful sending.
                      method:
                        type: string
                        description: Code getting method. Present only for successful submission.
                      reason:
                        type: string
                        description: The reason why it is not possible to receive the code.
                      retry_after:
                        type: number
                        description: Countdown in seconds until the next attempt
                      sms_wait:
                        type: number
                        description: Countdown in seconds until next sms attempt
                      status:
                        type: string
                        description: The status of the current request. For example, sent - the code has been sent, fail - an unsuccessful attempt
                      voice_wait:
                        type: string
                        description: Countdown in seconds until the next attempt to request a code on a call
                      wa_old_wait:
                        type: string
                        description: Countdown of the time during which the received code is active
                  - type: object
                    properties:
                      type:
                        type: string
                        enum: [alreadyLogged]
                        description: Indicates the account is already logged in.
                      message:
                        type: string
                        description: instance account already authorized
              examples:
                success:
                  summary: Successful code request
                  value:
                    flash_type: 0
                    login: "7123456789"
                    length: "6"
                    method: "sms"
                    status: "sent"
                    retry_after: 0
                    sms_wait: 0
                    voice_wait: "0"
                    wa_old_wait: "300"
                alreadyLogged:
                  summary: Account already logged in
                  value:
                    type: "alreadyLogged"
                    message: "instance account already authorized"
  /whatsapp/{idInstance}/sendRegistrationCode/:
    post:
      tags:
        - Account
      summary: Send registration code
      description: >
        The method is intended for sending the phone number registration code received via SMS or call.
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          required: true
          schema:
            type: string
          description: Unique instance identifier.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: The registration code received via SMS or call.
              required:
                - code
            example:
              code: "999999"
      responses:
        '200':
          description: Response indicating the result of sending the registration code.
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: Message type, possible values are `error`, `alreadyLogged`.
                  message:
                    type: string
                    description: The content of the message. Varies depending on the value of the `type` field.
              examples:
                success:
                  summary: Successful code submission
                  value:
                    type: ""
                    message: "Registration code accepted"
                error:
                  summary: Error response
                  value:
                    type: "error"
                    message: "Invalid code"
                alreadyLogged:
                  summary: Already logged in response
                  value:
                    type: "alreadyLogged"
                    message: "instance account already authorized"
  /whatsapp/{idInstance}/sendMessage:
    post:
      tags:
        - Sending
      summary: Send message
      description: >
        The method is used to send a text message to either a personal or group chat.
        Messages are placed in a sending queue and do not require a linked device at the time of sending.
        Queued messages will be stored for up to 24 hours until the account is authorized.
        The rate at which messages are sent from the queue is controlled by the Message sending delay parameter.
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          required: true
          schema:
            type: string
          description: Unique instance identifier.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                chatId:
                  type: string
                  description: Chat Id (personal like 11001234567@c.us or group like 11001234567-1581234048@g.us)
                message:
                  type: string
                  description: Message text. Emoji 😃 characters supported. Max length 4096 characters.
                quotedMessageId:
                  type: string
                  description: Quoted message ID. If present, the message will be sent quoting the specified chat message.
                archiveChat:
                  type: boolean
                  description: Archives the chat to which the message was sent. true/false
                linkPreview:
                  type: boolean
                  description: Includes displaying a preview and a description of the link. Enabled by default. true/false
              required:
                - chatId
                - message
            examples:
              personal:
                summary: Sending a message to a personal chat
                value:
                  chatId: "11001234567@c.us"
                  message: "hello world"
              group:
                summary: Sending a message to a group chat
                value:
                  chatId: "11001234567-1581234048@g.us"
                  message: "hello world"
              quoted:
                summary: Sending a quoted message
                value:
                  chatId: "11001234567@c.us"
                  message: "hello world"
                  quotedMessageId: "361B0E63F2FDF95903B6A9C9A102F34B"
      responses:
        '200':
          description: Successful response with sent message ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  idMessage:
                    type: string
                    description: Sent message Id
              example:
                idMessage: "3EB0C767D097B7C7C030"
  /whatsapp/{idInstance}/sendContact:
    post:
      tags:
        - Sending
      summary: Send contact
      description: >
        This method allows you to send a contact card message to a chat. The contact message is placed in the sending queue and does not require a linked device at the time of sending.
        Messages will remain in the queue for up to 24 hours until the account is authorized.
        The rate at which messages are sent from the queue is controlled by the Message sending delay parameter.
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          required: true
          schema:
            type: string
          description: Unique instance identifier.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                chatId:
                  type: string
                  description: Chat Id (personal or group)
                contact:
                  type: object
                  required:
                    - phoneContact
                  properties:
                    phoneContact:
                      type: integer
                      description: Contact phone number in international format (no +), 11 or 12 digits
                    firstName:
                      type: string
                      description: Contact first name (required if middleName, lastName, and company are not specified)
                    middleName:
                      type: string
                      description: Contact middle name (required if firstName, lastName, and company are not specified)
                    lastName:
                      type: string
                      description: Contact last name (required if firstName, middleName, and company are not specified)
                    company:
                      type: string
                      description: Contact company name (required if firstName, middleName, and lastName are not specified)
                quotedMessageId:
                  type: string
                  description: Quoted message ID. If present, the message will be sent quoting the specified chat message.
              required:
                - chatId
                - contact
            examples:
              personal:
                summary: Sending a contact to a personal chat
                value:
                  chatId: "11001234567@c.us"
                  contact:
                    phoneContact: 79001234568
                    firstName: "Artem"
                    middleName: "Petrovich"
                    lastName: "Evpatoriysky"
                    company: "Bicycle"
              group:
                summary: Sending a contact to a group chat
                value:
                  chatId: "11001234567-1581234048@g.us"
                  contact:
                    phoneContact: 79001234568
                    firstName: "Artem"
                    middleName: "Petrovich"
                    lastName: "Evpatoriysky"
                    company: "Bicycle"
              quoted:
                summary: Sending a quoted contact message
                value:
                  chatId: "11001234567@c.us"
                  quotedMessageId: "361B0E63F2FDF95903B6A9C9A102F34B"
                  contact:
                    phoneContact: 79001234568
                    firstName: "Artem"
                    middleName: "Petrovich"
                    lastName: "Evpatoriysky"
                    company: "Bicycle"
      responses:
        '200':
          description: Successful response with outgoing message ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  idMessage:
                    type: string
                    description: Outgoing message Id
              example:
                idMessage: "3EB0C767D097B7C7C030"
  /whatsapp/{idInstance}/sendFileByUpload:
    post:
      tags:
        - Sending
      summary: Send file by upload
      description: >
        This method allows you to send a file by uploading it using form-data. The file message is placed in the sending queue, and the sending rate is controlled by the Message sending delay parameter.
        Video, audio, and image files are sent in a way that allows them to be viewed or played natively in WhatsApp. Documents are also sent as in native WhatsApp. The file type and sending method are determined by the file extension. Captions can be added to images and videos only.
        The maximum allowed file size is 100 MB.
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          required: true
          schema:
            type: string
          description: Unique instance identifier.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                chatId:
                  type: string
                  description: Chat Id (personal or group)
                file:
                  type: string
                  format: binary
                  description: Outgoing file to be sent
                fileName:
                  type: string
                  description: File name, including extension
                caption:
                  type: string
                  description: Caption for the file (applies to images and videos only)
                quotedMessageId:
                  type: string
                  description: Quoted message ID. If present, the message will be sent quoting the specified chat message.
              required:
                - chatId
                - file
            example:
              chatId: "11001234567@c.us"
              file: (binary)
              fileName: "window.jpg"
              caption: "Description"
              quotedMessageId: "361B0E63F2FDF95903B6A9C9A102F34B"
      responses:
        '200':
          description: Successful response with sent message ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  idMessage:
                    type: string
                    description: Sent message Id
              example:
                idMessage: "3EB0C767D097B7C7C030"
  /whatsapp/{idInstance}/sendFileByUrl:
    post:
      tags:
        - Sending
      summary: Send file by URL
      description: >
        This method allows you to send a file by providing its URL. The file message is added to the sending queue and will be sent as soon as the account is authorized. Messages remain in the queue for up to 24 hours. The sending rate is managed by the Message sending delay parameter.
        Video, audio, and image files are delivered in a format that enables native viewing or playback in WhatsApp, while documents are sent as standard files. The file type and sending method are determined by the file extension. Captions can be included only for images and videos.
        The maximum file size for outgoing files is 100 MB.
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          required: true
          schema:
            type: string
          description: Unique instance identifier.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                chatId:
                  type: string
                  description: Chat Id (personal or group)
                urlFile:
                  type: string
                  description: Link to the outgoing file
                fileName:
                  type: string
                  description: File name, including extension
                caption:
                  type: string
                  description: Caption for the file (applies to images and videos only)
                quotedMessageId:
                  type: string
                  description: Quoted message ID. If present, the message will be sent quoting the specified chat message.
                archiveChat:
                  type: boolean
                  description: Archives the chat to which the message was sent. true/false
              required:
                - chatId
                - urlFile
                - fileName
            examples:
              personal:
                summary: Sending a file to a personal chat
                value:
                  chatId: "11001234567@c.us"
                  urlFile: "https://my.site.com/img/horse.png"
                  fileName: "horse.png"
                  caption: "Little horse"
              group:
                summary: Sending a file to a group chat
                value:
                  chatId: "11001234567-1581234048@g.us"
                  urlFile: "https://my.site.com/img/horse.png"
                  fileName: "horse.png"
                  caption: "Little horse"
              quoted:
                summary: Sending a quoted file message
                value:
                  chatId: "11001234567@c.us"
                  urlFile: "https://my.site.com/img/horse.png"
                  fileName: "horse.png"
                  caption: "Little horse"
                  quotedMessageId: "361B0E63F2FDF95903B6A9C9A102F34B"
      responses:
        '200':
          description: Successful response with outgoing message ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  idMessage:
                    type: string
                    description: Outgoing message Id
              example:
                idMessage: "3EB0C767D097B7C7C030"
  /whatsapp/{idInstance}/sendLocation:
    post:
      tags:
        - Sending
      summary: Send location
      description: >
        This method allows you to send a location message to a chat. The message is placed in the sending queue and does not require a linked device at the time of sending.
        Messages remain in the queue for up to 24 hours until the account is authorized. The sending rate is managed by the Message sending delay parameter.
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          required: true
          schema:
            type: string
          description: Unique instance identifier.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                chatId:
                  type: string
                  description: Chat Id (personal or group)
                nameLocation:
                  type: string
                  description: Location name
                address:
                  type: string
                  description: Location address
                latitude:
                  type: number
                  format: double
                  description: Location latitude
                longitude:
                  type: number
                  format: double
                  description: Location longitude
                quotedMessageId:
                  type: string
                  description: Quoted message ID. If present, the message will be sent quoting the specified chat message.
              required:
                - chatId
                - latitude
                - longitude
            examples:
              personal:
                summary: Sending a location to a personal chat
                value:
                  chatId: "11001234567@c.us"
                  nameLocation: "Restaurant"
                  address: "123456, Perm"
                  latitude: 12.3456789
                  longitude: 10.1112131
              group:
                summary: Sending a location to a group chat
                value:
                  chatId: "11001234567-1581234048@g.us"
                  nameLocation: "Restaurant"
                  address: "123456, Perm"
                  latitude: 12.3456789
                  longitude: 10.1112131
              quoted:
                summary: Sending a quoted location message
                value:
                  chatId: "11001234567@c.us"
                  nameLocation: "Restaurant"
                  address: "123456, Perm"
                  latitude: 12.3456789
                  longitude: 10.1112131
                  quotedMessageId: "361B0E63F2FDF95903B6A9C9A102F34B"
      responses:
        '200':
          description: Successful response with outgoing message ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  idMessage:
                    type: string
                    description: Outgoing message Id
              example:
                idMessage: "3EB0C767D097B7C7C030"
  /whatsapp/{idInstance}/uploadFile:
    post:
      tags:
        - Sending
      summary: Upload file
      description: >-
        Документация
        [SendMessage](https://sdkwa.pro/en/docs/api/sending/SendMessage/)
      requestBody:
        content:
          text/plain: {}
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /whatsapp/{idInstance}/receiveNotification:
    get:
      tags:
        - Receiving > Receiving notification
      summary: Receive notification
      description: >-
        Документация
        [ReceiveNotification](https://sdkwa.pro/en/docs/api/receiving/technology-http-api/ReceiveNotification/)
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.24.0 (Ubuntu)
            Date:
              schema:
                type: string
                example: Fri, 11 Oct 2024 11:12:53 GMT
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '456'
            Connection:
              schema:
                type: string
                example: keep-alive
            Vary:
              schema:
                type: string
                example: Access-Control-Request-Headers
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            X-DNS-Prefetch-Control:
              schema:
                type: string
                example: 'off'
            Expect-CT:
              schema:
                type: string
                example: max-age=0
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            X-XSS-Protection:
              schema:
                type: integer
                example: '0'
            ETag:
              schema:
                type: string
                example: W/"1c8-eAmbYP0QjN+sdny3zQa0NoiY8bo"
          content:
            application/json:
              schema:
                type: object
              example:
                receiptId: 13
                body:
                  typeWebhook: incomingMessageReceived
                  instanceData:
                    idInstance: 1101000000
                    wid: 712345678910@c.us
                    typeInstance: whatsapp
                  timestamp: 1728645168
                  idMessage: 653A37E275146F8C06B2686D3DCDADD2
                  senderData:
                    chatId: 712345678911@c.us
                    chatName: example
                    sender: 712345678911@c.us
                    senderName: example
                  messageData:
                    typeMessage: textMessage
                    textMessageData:
                      textMessage: hello
  /whatsapp/{idInstance}/deleteNotification/12:
    delete:
      tags:
        - Receiving > Receiving notification
      summary: Delete notification
      description: >-
        Документация
        [DeleteNotification](https://sdkwa.pro/en/docs/api/receiving/technology-http-api/DeleteNotification/)
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.24.0 (Ubuntu)
            Date:
              schema:
                type: string
                example: Fri, 11 Oct 2024 11:12:32 GMT
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '15'
            Connection:
              schema:
                type: string
                example: keep-alive
            Vary:
              schema:
                type: string
                example: Access-Control-Request-Headers
            Content-Security-Policy:
              schema:
                type: string
                example: >-
                  default-src 'self';base-uri
                  'self';block-all-mixed-content;font-src 'self' https:
                  data:;frame-ancestors 'self';img-src 'self' data:;object-src
                  'none';script-src 'self';script-src-attr 'none';style-src
                  'self' https: 'unsafe-inline';upgrade-insecure-requests
            X-DNS-Prefetch-Control:
              schema:
                type: string
                example: 'off'
            Expect-CT:
              schema:
                type: string
                example: max-age=0
            X-Frame-Options:
              schema:
                type: string
                example: SAMEORIGIN
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=15552000; includeSubDomains
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            X-XSS-Protection:
              schema:
                type: integer
                example: '0'
            ETag:
              schema:
                type: string
                example: W/"f-ayLlCL3PuzXSThdu78iReSEjl6Y"
          content:
            application/json:
              schema:
                type: object
              example:
                result: true
  /waInstance{idInstance}/downloadFile/{idMessage}:
    get:
      tags:
        - Receiving > Get files
      summary: Download file from incoming message
      description: >-
        Документация
        [DownloadFile](https://sdkwa.pro/en/docs/api/receiving/files/DownloadFile/)
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
        - name: idMessage
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /whatsapp/{idInstance}/getChatHistory:
    post:
      tags:
        - Journals
      summary: Get chat history
      description: >-
        Документация
        [GetChatHistory](https://sdkwa.pro/en/docs/api/journals/GetChatHistory/)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                chatId: 79192533586@c.us
                count: 2000
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.10.3
            Date:
              schema:
                type: string
                example: Fri, 17 Apr 2020 13:14:58 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '41'
            Connection:
              schema:
                type: string
                example: keep-alive
          content:
            application/json:
              schema:
                type: object
              example:
                - idMessage: 3EB0C732BC93864C25FB
                  timestamp: 1587412276
                  statusMessage: read
                  typeMessage: textMessage
                  chatId: 79001234567@c.us
                  textMessage: Hello man
                - idMessage: 3EB0C37D09143B7F53A0
                  timestamp: 1587412276
                  statusMessage: read
                  typeMessage: textMessage
                  chatId: 79001234567@c.us
                  textMessage: Hello man
  /whatsapp/{idInstance}/lastOutgoingMessages:
    get:
      tags:
        - Journals
      summary: Get outgoing messages journal
      description: >-
        Документация
        [LastOutgoingMessages](https://sdkwa.pro/en/docs/api/journals/LastOutgoingMessages/)
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.10.3
            Date:
              schema:
                type: string
                example: Mon, 20 Apr 2020 20:01:05 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '2900'
            Connection:
              schema:
                type: string
                example: keep-alive
          content:
            application/json:
              schema:
                type: object
              example:
                - idMessage: 3EB0C732BC93864C25FB
                  timestamp: 1587412276
                  statusMessage: read
                  typeMessage: textMessage
                  chatId: 79001234567@c.us
                  textMessage: Hello man
                - idMessage: 3EB0C37D09143B7F53A0
                  timestamp: 1587412276
                  statusMessage: read
                  typeMessage: textMessage
                  chatId: 79001234567@c.us
                  textMessage: Hello man
  /whatsapp/{idInstance}/lastIncomingMessages:
    get:
      tags:
        - Journals
      summary: Get incoming messages journal
      description: >-
        Документация
        [LastIncomingMessages](https://sdkwa.pro/en/docs/api/journals/LastIncomingMessages/)
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.10.3
            Date:
              schema:
                type: string
                example: Mon, 20 Apr 2020 19:57:39 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '1643'
            Connection:
              schema:
                type: string
                example: keep-alive
          content:
            application/json:
              schema:
                type: object
              example:
                - idMessage: 8E078426472FACECDFC2787173F05459
                  timestamp: 1587412262
                  typeMessage: textMessage
                  chatId: 79001234567@c.us
                  senderId: 79001234567@c.us
                  senderName: Name
                  textMessage: Answer
                - idMessage: 75A35BA7745DB8FE6A8AD59C3F51C8CC
                  timestamp: 1587412279
                  typeMessage: textMessage
                  chatId: 79001234567@c.us
                  senderId: 79001234567@c.us
                  senderName: Name
                  textMessage: Answer
  /whatsapp/{idInstance}/clearMessagesQueue:
    get:
      tags:
        - Queues
      summary: Clear messages queue
      description: >-
        Документация
        [ClearMessagesQueue](https://sdkwa.pro/en/docs/api/queues/ClearMessagesQueue/)
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.10.3
            Date:
              schema:
                type: string
                example: Mon, 20 Apr 2020 19:53:58 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '23'
            Connection:
              schema:
                type: string
                example: keep-alive
          content:
            application/json:
              schema:
                type: object
              example:
                isCleared: true
  /whatsapp/{idInstance}/showMessagesQueue:
    get:
      tags:
        - Queues
      summary: Show messages queue
      description: >-
        Документация
        [ShowMessagesQueue](https://sdkwa.pro/en/docs/api/queues/ShowMessagesQueue/)
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.10.3
            Date:
              schema:
                type: string
                example: Mon, 20 Apr 2020 19:50:48 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '321'
            Connection:
              schema:
                type: string
                example: keep-alive
          content:
            application/json:
              schema:
                type: object
              example:
                - typeMessage: textMessage
                  chatId: 79001234567@c.us
                  message: Hello man
                - typeMessage: textMessage
                  chatId: 79001234567@c.us
                  message: Hello man
                - typeMessage: textMessage
                  chatId: 79001234567@c.us
                  message: Hello man
                - typeMessage: textMessage
                  chatId: 79001234567@c.us
                  message: Hello man
  /whatsapp/{idInstance}/updateGroupName:
    post:
      tags:
        - Groups
      summary: Change group name
      description: >-
        Документация
        [UpdateGroupName](https://sdkwa.pro/en/docs/api/groups/UpdateGroupName/)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                groupId: 79001234567-1587570015@g.us
                groupName: Group created by WASDK+
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.10.3
            Date:
              schema:
                type: string
                example: Tue, 28 Apr 2020 14:42:45 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '29'
            Connection:
              schema:
                type: string
                example: keep-alive
          content:
            application/json:
              schema:
                type: object
              example:
                updateGroupName: true
  /whatsapp/{idInstance}/getGroupData:
    post:
      tags:
        - Groups
      summary: Get group data
      description: >-
        Документация
        [GetGroupData](https://sdkwa.pro/en/docs/api/groups/GetGroupData/)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                groupId: 79001234567-1587570015@g.us
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.10.3
            Date:
              schema:
                type: string
                example: Tue, 28 Apr 2020 14:32:20 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '457'
            Connection:
              schema:
                type: string
                example: keep-alive
          content:
            application/json:
              schema:
                type: object
              example:
                groupId: 79001234567-1587570015@g.us
                owner: 79001234567@c.us
                subject: WASDK Group
                creation: 1587570015
                participants:
                  - id: 79001234567@c.us
                    isAdmin: true
                    isSuperAdmin: true
                  - id: 79001234568@c.us
                    isAdmin: true
                    isSuperAdmin: false
                  - id: 79001234569@c.us
                    isAdmin: false
                    isSuperAdmin: false
                subjectTime: 1587737715
                subjectOwner: 79001234567@c.us
                groupInviteLink: https://chat.whatsapp.com/xxxxxxxxxxxxxxxxxxxxxx
  /waInstance{idInstance}/leaveGroup/{apiTokenInstance}:
    post:
      tags:
        - Groups
      summary: Leave group
      description: >-
        Документация
        [LeaveGroup](https://sdkwa.pro/en/docs/api/groups/LeaveGroup/)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                groupId: 79001234567-1587570015@g.us
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
        - name: apiTokenInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.10.3
            Date:
              schema:
                type: string
                example: Tue, 28 Apr 2020 14:58:22 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '24'
            Connection:
              schema:
                type: string
                example: keep-alive
          content:
            application/json:
              schema:
                type: object
              example:
                leaveGroup: true
  /whatsapp/{idInstance}/setGroupAdmin:
    post:
      tags:
        - Groups
      summary: Set group admin rights
      description: >-
        Документация
        [SetGroupAdmin](https://sdkwa.pro/en/docs/api/groups/SetGroupAdmin/)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                groupId: 79001234567-1587570015@g.us
                participantChatId: 79001234565@c.us
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.10.3
            Date:
              schema:
                type: string
                example: Tue, 28 Apr 2020 14:45:35 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '27'
            Connection:
              schema:
                type: string
                example: keep-alive
          content:
            application/json:
              schema:
                type: object
              example:
                setGroupAdmin: true
  /whatsapp/{idInstance}/removeGroupParticipant:
    post:
      tags:
        - Groups
      summary: Delete group participant
      description: >-
        Документация
        [RemoveGroupParticipant](https://sdkwa.pro/en/docs/api/groups/RemoveGroupParticipant/)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                groupId: 79001234567-1587570015@g.us
                participantChatId: 79001234565@c.us
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.10.3
            Date:
              schema:
                type: string
                example: Tue, 28 Apr 2020 14:35:40 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '31'
            Connection:
              schema:
                type: string
                example: keep-alive
          content:
            application/json:
              schema:
                type: object
              example:
                removeParticipant: true
  /whatsapp{idInstance}/removeAdmin:
    post:
      tags:
        - Groups
      summary: Remove group admin rights
      description: >-
        Документация
        [RemoveAdmin](https://sdkwa.pro/en/docs/api/groups/RemoveAdmin/)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                groupId: 79001234567-1587570015@g.us
                participantChatId: 79001234565@c.us
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.10.3
            Date:
              schema:
                type: string
                example: Tue, 28 Apr 2020 14:49:49 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '25'
            Connection:
              schema:
                type: string
                example: keep-alive
          content:
            application/json:
              schema:
                type: object
              example:
                removeAdmin: true
  /whatsapp/{idInstance}/createGroup:
    post:
      tags:
        - Groups
      summary: Create group
      description: >-
        Документация
        [CreateGroup](https://sdkwa.pro/en/docs/api/groups/CreateGroup/)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                groupName: Group created by WASDK
                chatIds:
                  - 79001234568@c.us
                  - 79001234569@c.us
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.10.3
            Date:
              schema:
                type: string
                example: Tue, 28 Apr 2020 14:27:29 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '124'
            Connection:
              schema:
                type: string
                example: keep-alive
          content:
            application/json:
              schema:
                type: object
              example:
                created: true
                chatId: 79001234567-1587570015@g.us
                groupInviteLink: https://chat.whatsapp.com/XXXXXXXXXXXXXXXXXXXXXX
  /whatsapp/{idInstance}/addGroupParticipant:
    post:
      tags:
        - Groups
      summary: Add group participant
      description: >-
        Документация
        [AddGroupParticipant](https://sdkwa.pro/en/docs/api/groups/AddGroupParticipant/)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                groupId: 79001234567-1587570015@g.us
                participantChatId: 79001234565@c.us
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.10.3
            Date:
              schema:
                type: string
                example: Tue, 28 Apr 2020 14:37:57 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '28'
            Connection:
              schema:
                type: string
                example: keep-alive
          content:
            application/json:
              schema:
                type: object
              example:
                addParticipant: true
  /whatsapp/{idInstance}/setGroupPicture:
    post:
      tags:
        - Groups
      summary: Set group picture
      description: >-
        Документация
        [SetGroupPicture](https://sdkwa.pro/en/docs/api/account/SetGroupPicture/)
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                groupId:
                  type: string
                  description: group ID, for example 74433384355-1585564682@g.us
                  example: 120363022730913588@g.us
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.10.3
            Date:
              schema:
                type: string
                example: Tue, 21 Apr 2020 13:16:18 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: keep-alive
          content:
            application/json:
              schema:
                type: object
              example:
                setGroupPicture: true
                urlAvatar: >-
                  https://pps.whatsapp.net/v/t61.24694-24/138639660_724754321806449_9118612187814397965_n.jpg?oh=997b0bb13b6bbb750432a86d4b8d935d&oe=600****BB4
                reason: ''
  /whatsapp/{idInstance}/readChat:
    post:
      tags:
        - Read mark
      summary: Mark message as read
      description: Документация [ReadChat](https://sdkwa.pro/en/docs/api/marks/ReadChat/)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                chatId: 79001234567@c.us
                idMessage: B275A7AA0D6EF89BB9245169BDF174E6
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.10.3
            Date:
              schema:
                type: string
                example: Wed, 06 May 2020 20:36:35 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '21'
            Connection:
              schema:
                type: string
                example: keep-alive
          content:
            application/json:
              schema:
                type: object
              example:
                setRead: true
  /whatsapp/{idInstance}/readChat/:
    post:
      tags:
        - Read mark
      summary: Mark chat as read
      description: Документация [ReadChat](https://sdkwa.pro/en/docs/api/marks/ReadChat/)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                chatId: 79001234567@c.us
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.10.3
            Date:
              schema:
                type: string
                example: Wed, 06 May 2020 20:36:35 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '21'
            Connection:
              schema:
                type: string
                example: keep-alive
          content:
            application/json:
              schema:
                type: object
              example:
                setRead: true
  /whatsapp/{idInstance}/getContacts:
    get:
      tags:
        - Service methods
      summary: Get contacts
      description: >-
        Документация
        [GetContacts](https://sdkwa.pro/en/docs/api/service/GetContacts/)
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.10.3
            Date:
              schema:
                type: string
                example: Mon, 20 Apr 2020 19:54:33 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '458'
            Connection:
              schema:
                type: string
                example: keep-alive
          content:
            application/json:
              schema:
                type: object
              example:
                - id: 79001234567@c.us
                  name: David Davidson
                  type: user
                - id: 79001234568@c.us
                  name: David Davidson
                  type: user
                - id: 79001234569-1479621234@g.us
                  name: My group
                  type: group
  /waInstance{idInstance}/getChats/{apiTokenInstance}:
    get:
      tags:
        - Service methods
      summary: Get chats
      description: >-
        Документация
        [GetContacts](https://sdkwa.pro/en/docs/api/service/GetContacts/)
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
        - name: apiTokenInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.10.3
            Date:
              schema:
                type: string
                example: Mon, 20 Apr 2020 19:54:33 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '458'
            Connection:
              schema:
                type: string
                example: keep-alive
          content:
            application/json:
              schema:
                type: object
              example:
                - archive: false
                  id: 120363019978548724@g.us
                  notSpam: true
                  ephemeralExpiration: 0
                  ephemeralSettingTimestamp: 0
                - archive: false
                  id: 120363020283804841@g.us
                  notSpam: true
                  ephemeralExpiration: 0
                  ephemeralSettingTimestamp: 0
                - archive: false
                  id: 120363020957614065@g.us
                  notSpam: true
                  ephemeralExpiration: 0
                  ephemeralSettingTimestamp: 0
  /whatsapp/{idInstance}/GetContactInfo:
    get:
      tags:
        - Service methods
      summary: Get contact info
      description: >-
        Документация
        [GetContacts](https://sdkwa.pro/en/docs/api/service/GetContacts/)
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.10.3
            Date:
              schema:
                type: string
                example: Mon, 20 Apr 2020 19:54:33 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '458'
            Connection:
              schema:
                type: string
                example: keep-alive
          content:
            application/json:
              schema:
                type: object
              example:
                avatar: >-
                  https://pps.whatsapp.net/v/t61.24694-24/24_1349471992200940_2091838963901201896_n.jpg?ccb=11-4&oh=01_AVzZilQn10nj9M9cfQV4PW5dgdXOkiOuD_jCqP2MCXIpyA
                name: Dealer
                email: 24service@tt.tt
                category: Automotive Dealership
                description: Official service
                products:
                  - id: '42079728159'
                    imageUrls:
                      requested: >-
                        https://mmg.whatsapp.net/v/t45.5328-4/263329037_6625110154227932_2879714823340281709_n.jpg?stp=dst-jpg_p100x100&ccb=1-7&_nc_sid=c48759&_nc_ohc=NKICbZlqfPMAX9077mo&_nc_ad=z-m&_nc_cid=0&_nc_ht=mmg.whatsapp.net&oh=01_AVwYzx7CckCFf8F8xIIZ5m2AGdeC8YTnLyd29
                      original: >-
                        https://mmg.whatsapp.net/v/t45.5328-4/263329037_6625110154227932_2879714823340281709_n.jpg?ccb=1-7&_nc_sid=c48759&_nc_ohc=NKICbZlqfPMAX9077mo&_nc_ad=z-m&_nc_cid=0&_nc_ht=mmg.whatsapp.net&oh=01_AVzn_O9azpKNRs1iPId0TQkGYk4D7HZFSQMeobvRiR
                    reviewStatus:
                      whatsapp: APPROVED
                    availability: in stock
                    name: Repl
                    description: From 1000 r.
                    price: 12345
                    isHidden: false
                  - id: '3545870328871389'
                    imageUrls:
                      requested: >-
                        https://mmg.whatsapp.net/v/t45.5328-4/261250418_4513761695371199_1710541959703469822_n.jpg?stp=dst-jpg_p100x100&ccb=1-7&_nc_sid=c48759&_nc_ohc=eps8lAw2_3MAX_mWW8K&_nc_ad=z-m&_nc_cid=0&_nc_ht=mmg.whatsapp.net&oh=01_AVxT3HnbR04qKZJSOeK4d8p-noZokqly9QbpYFK-c_8kSA&oe
                      original: >-
                        https://mmg.whatsapp.net/v/t45.5328-4/261250418_4513761695371199_1710541959703469822_n.jpg?ccb=1-7&_nc_sid=c48759&_nc_ohc=eps8lAw2_3MAX_mWW8K&_nc_ad=z-m&_nc_cid=0&_nc_ht=mmg.whatsapp.net&oh=01_AVx2wTCmzof0BoZDmIUpD328CtpJmlvEXGdVzew&o
                    reviewStatus:
                      whatsapp: APPROVED
                    availability: in stock
                    name: Stock
                    price: 12345
                    isHidden: false
  /whatsapp/{idInstance}/setProfilePicture:
    post:
      tags:
        - Service methods
      summary: Set profile picture
      description: >-
        Документация
        [SetProfilePicture](https://sdkwa.pro/en/docs/api/account/SetProfilePicture/)
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.10.3
            Date:
              schema:
                type: string
                example: Tue, 21 Apr 2020 13:16:18 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '26'
            Connection:
              schema:
                type: string
                example: keep-alive
          content:
            application/json:
              schema:
                type: object
              example:
                reason: ''
                urlAvatar: >-
                  https://pps.whatsapp.net/v/t61.24694-24/308483571_1207971116429213_502077014284387099_n.jpg?ccb=11-4&oh=01_AVx1GN64qIhU3ug2vwiTtEKuRaiG3JdQJokfCkvVJ9Ym-Q&oe=634487CA
                setProfilePicture: true
  /whatsapp/{idInstance}/archiveChat:
    post:
      tags:
        - Service methods
      summary: Archive chat
      description: >-
        Документация
        [GetAvatar](https://sdkwa.pro/en/docs/api/service/GetAvatar/)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                chatId: 79123456789756@c.us
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.10.3
            Date:
              schema:
                type: string
                example: Fri, 17 Apr 2020 14:40:40 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '190'
            Connection:
              schema:
                type: string
                example: keep-alive
          content:
            application/json:
              schema:
                type: object
              example: {}
  /whatsapp/{idInstance}/unarchiveChat:
    post:
      tags:
        - Service methods
      summary: Unarchive chat
      description: >-
        Документация
        [GetAvatar](https://sdkwa.pro/en/docs/api/service/GetAvatar/)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                chatId: 79123456789123@c.us
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.10.3
            Date:
              schema:
                type: string
                example: Fri, 17 Apr 2020 14:40:40 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '190'
            Connection:
              schema:
                type: string
                example: keep-alive
          content:
            application/json:
              schema:
                type: object
              example: {}
  /whatsapp/{idInstance}/deleteMessage:
    post:
      tags:
        - Service methods
      summary: Delete message
      description: >-
        Документация
        [GetAvatar](https://sdkwa.pro/en/docs/api/service/GetAvatar/)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                chatId: 791234567893442@c.us
                idMessage: BAE5367237E13A87
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.10.3
            Date:
              schema:
                type: string
                example: Fri, 17 Apr 2020 14:40:40 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '190'
            Connection:
              schema:
                type: string
                example: keep-alive
          content:
            application/json:
              schema:
                type: object
              example: {}
  /whatsapp/{idInstance}/getAvatar:
    post:
      tags:
        - Service methods
      summary: Get avatar contact
      description: >-
        Документация
        [GetAvatar](https://sdkwa.pro/en/docs/api/service/GetAvatar/)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                chatId: 7900123456732@c.us
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.10.3
            Date:
              schema:
                type: string
                example: Fri, 17 Apr 2020 14:40:40 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '190'
            Connection:
              schema:
                type: string
                example: keep-alive
          content:
            application/json:
              schema:
                type: object
              example:
                existsWhatsapp: true
                urlAvatar: https://pps.whatsapp.net/v/avatar.jpg
  /whatsapp/{idInstance}/checkWhatsapp:
    post:
      tags:
        - Service methods
      summary: Check WhatsApp availability
      description: >-
        Документация
        [CheckWhatsapp](https://sdkwa.pro/en/docs/api/service/CheckWhatsapp/)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                phoneNumber: 79001234561213
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.10.3
            Date:
              schema:
                type: string
                example: Fri, 17 Apr 2020 14:35:46 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Content-Length:
              schema:
                type: integer
                example: '28'
            Connection:
              schema:
                type: string
                example: keep-alive
          content:
            application/json:
              schema:
                type: object
              example:
                existsWhatsapp: true
  /whatsapp/{idInstance}/setProfileName:
    post:
      tags:
        - Service methods
      summary: Set profile name
      description: >-
        Документация
        [SetProfilePicture](https://sdkwa.pro/en/docs/api/account/SetProfilePicture/)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: new name
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /whatsapp/{idInstance}/setProfileStatus:
    post:
      tags:
        - Service methods
      summary: Set profile status
      description: >-
        Документация
        [SetProfilePicture](https://sdkwa.pro/en/docs/api/account/SetProfilePicture/)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                status: new status
      security:
        - bearerAuth: []
      parameters:
        - name: idInstance
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/instance/user/instances/list:
    post:
      tags:
        - instances management
      summary: User instances list
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example: ''
      parameters:
        - name: x-ga-user-id
          in: header
          schema:
            type: string
          example: '{{user-id}}'
        - name: x-ga-user-token
          in: header
          schema:
            type: string
          example: '{{user-token}}'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.14.0 (Ubuntu)
            Date:
              schema:
                type: string
                example: Thu, 02 Dec 2021 03:27:24 GMT
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '5690'
            Connection:
              schema:
                type: string
                example: keep-alive
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: X-Requested-With
            ETag:
              schema:
                type: string
                example: W/"163a-dSOeW4TRNOtnUFhN4g1Toa3xlpU"
          content:
            application/json:
              schema:
                type: object
              example:
                result: true
                data:
                  - idInstance: 1101000001
                    typeInstance: whatsapp
                    typeAccount: ''
                    partnerUserUiid: ''
                    timeCreated: '2021-12-02T05:41:00'
                    timeDeleted: '2021-12-02T05:50:21'
                    apiTokenInstance: 3e03ea9ff3324e228ae3dfdf4d48e409bfa1b1ad0b0c46bf8c
                    deleted: true
                    emailUser: admin@wasdk.pro
                  - idInstance: 1101000002
                    typeInstance: whatsapp
                    typeAccount: ''
                    partnerUserUiid: ''
                    timeCreated: '2021-12-02T05:41:35'
                    timeDeleted: '2021-12-02T05:51:08'
                    apiTokenInstance: 94237c81721f421da7f4dceb51b91aca027f991e86334d67a9
                    deleted: true
                    emailUser: admin@wasdk.pro
                  - idInstance: 1101000003
                    typeInstance: whatsapp
                    typeAccount: ''
                    partnerUserUiid: ''
                    timeCreated: '2021-12-02T05:41:35'
                    timeDeleted: '2021-12-02T05:51:14'
                    apiTokenInstance: c397c24ed9b94e608c8fb0a0d16515bad86354d4990c499183
                    deleted: true
                    emailUser: admin@wasdk.pro
                  - idInstance: 1101000004
                    typeInstance: whatsapp
                    typeAccount: ''
                    partnerUserUiid: ''
                    timeCreated: '2021-12-02T05:41:36'
                    timeDeleted: '0001-01-01T00:00:00'
                    apiTokenInstance: d94a4fa25e76472ab32f8bb6a453d9d0395e6a55b9f5461a88
                    deleted: false
                    emailUser: admin@wasdk.pro
                  - idInstance: 1101000005
                    typeInstance: whatsapp
                    typeAccount: ''
                    partnerUserUiid: ''
                    timeCreated: '2021-12-02T05:41:37'
                    timeDeleted: '0001-01-01T00:00:00'
                    apiTokenInstance: 046da3264bd441958792349a1bb79eed5b7c945a348c4057a6
                    deleted: false
                    emailUser: admin@wasdk.pro
                  - idInstance: 1101000006
                    typeInstance: whatsapp
                    typeAccount: ''
                    partnerUserUiid: ''
                    timeCreated: '2021-12-02T05:41:38'
                    timeDeleted: '0001-01-01T00:00:00'
                    apiTokenInstance: bfe93e44ddcd4a4d8969ad69017b29704846f60c1990417a82
                    deleted: false
                    emailUser: admin@wasdk.pro
                  - idInstance: 1101000007
                    typeInstance: whatsapp
                    typeAccount: ''
                    partnerUserUiid: ''
                    timeCreated: '2021-12-02T05:41:38'
                    timeDeleted: '0001-01-01T00:00:00'
                    apiTokenInstance: ea6b2d0e32e24d0b85ef9aa1492e5f663045a191f1354f5d81
                    deleted: false
                    emailUser: admin@wasdk.pro
                  - idInstance: 1101000008
                    typeInstance: whatsapp
                    typeAccount: ''
                    partnerUserUiid: ''
                    timeCreated: '2021-12-02T05:41:40'
                    timeDeleted: '0001-01-01T00:00:00'
                    apiTokenInstance: d1d5b09cdd7548419153f058eddf2cb963af841295354432b2
                    deleted: false
                    emailUser: admin@wasdk.pro
                  - idInstance: 1101000009
                    typeInstance: whatsapp
                    typeAccount: ''
                    partnerUserUiid: ''
                    timeCreated: '2021-12-02T05:41:41'
                    timeDeleted: '0001-01-01T00:00:00'
                    apiTokenInstance: 5ea7c6bc10e742fd881ffd3521271aee01613b2d5d6147f7bd
                    deleted: false
                    emailUser: admin@wasdk.pro
                  - idInstance: 1101000010
                    typeInstance: whatsapp
                    typeAccount: ''
                    partnerUserUiid: ''
                    timeCreated: '2021-12-02T05:41:42'
                    timeDeleted: '0001-01-01T00:00:00'
                    apiTokenInstance: 396bf172115c4a1cafbc4ab12bff6ab3294066c0902b4f31a5
                    deleted: false
                    emailUser: admin@wasdk.pro
                  - idInstance: 1101000011
                    typeInstance: whatsapp
                    typeAccount: ''
                    partnerUserUiid: ''
                    timeCreated: '2021-12-02T05:41:43'
                    timeDeleted: '0001-01-01T00:00:00'
                    apiTokenInstance: cfc10c1d4ab349beb6b087f7c8a44a61b285ccc12e69443090
                    deleted: false
                    emailUser: admin@wasdk.pro
                  - idInstance: 1101000012
                    typeInstance: whatsapp
                    typeAccount: ''
                    partnerUserUiid: ''
                    timeCreated: '2021-12-02T05:41:43'
                    timeDeleted: '0001-01-01T00:00:00'
                    apiTokenInstance: 14b13a3733ba4caeb26145b9f5efb510a37a7822293147d4a0
                    deleted: false
                    emailUser: admin@wasdk.pro
                  - idInstance: 1101000013
                    typeInstance: whatsapp
                    typeAccount: ''
                    partnerUserUiid: ''
                    timeCreated: '2021-12-02T05:41:44'
                    timeDeleted: '0001-01-01T00:00:00'
                    apiTokenInstance: 8ab8604c7abf484cb46ad58bc8f6fb9ab5aaa46f5b7d42f9be
                    deleted: false
                    emailUser: admin@wasdk.pro
                  - idInstance: 1101000014
                    typeInstance: whatsapp
                    typeAccount: ''
                    partnerUserUiid: ''
                    timeCreated: '2021-12-02T05:41:45'
                    timeDeleted: '0001-01-01T00:00:00'
                    apiTokenInstance: 39464e0d33f245008d9ed5ef1e15892dde7aa0e84586416d9b
                    deleted: false
                    emailUser: admin@wasdk.pro
                  - idInstance: 1101000015
                    typeInstance: whatsapp
                    typeAccount: ''
                    partnerUserUiid: ''
                    timeCreated: '2021-12-02T05:41:46'
                    timeDeleted: '0001-01-01T00:00:00'
                    apiTokenInstance: 6901a04c100d43e396420f4c90273b71bd42abefe7bd407d84
                    deleted: false
                    emailUser: admin@wasdk.pro
                  - idInstance: 1101000016
                    typeInstance: whatsapp
                    typeAccount: ''
                    partnerUserUiid: ''
                    timeCreated: '2021-12-02T05:41:47'
                    timeDeleted: '0001-01-01T00:00:00'
                    apiTokenInstance: 4a8f7e3cc4c14acfa01c43eb6735d81dfe304591c25e4aa29d
                    deleted: false
                    emailUser: admin@wasdk.pro
                  - idInstance: 1101000017
                    typeInstance: whatsapp
                    typeAccount: ''
                    partnerUserUiid: ''
                    timeCreated: '2021-12-02T05:41:48'
                    timeDeleted: '0001-01-01T00:00:00'
                    apiTokenInstance: 48bc986a5fba41949cd80326252307065cd1cb5682fc4cbc98
                    deleted: false
                    emailUser: admin@wasdk.pro
                  - idInstance: 1101000018
                    typeInstance: whatsapp
                    typeAccount: ''
                    partnerUserUiid: ''
                    timeCreated: '2021-12-02T05:41:53'
                    timeDeleted: '2021-12-02T05:56:01'
                    apiTokenInstance: 0ca9dfc385694c059084b78d1afbf76f76db8f59499e40ca86
                    deleted: true
                    emailUser: admin@wasdk.pro
                  - idInstance: 1101000019
                    typeInstance: whatsapp
                    typeAccount: ''
                    partnerUserUiid: ''
                    timeCreated: '2021-12-02T05:49:46'
                    timeDeleted: '0001-01-01T00:00:00'
                    apiTokenInstance: 9b289b55f2964fd0b1852f375fdd8f233eac324a79ee46a89a
                    deleted: false
                    emailUser: admin@wasdk.pro
                  - idInstance: 1101000037
                    typeInstance: whatsapp
                    typeAccount: ''
                    partnerUserUiid: ''
                    timeCreated: '2021-12-02T06:22:59'
                    timeDeleted: '2021-12-02T06:23:49'
                    apiTokenInstance: 2be110d129b144ecb2a867e487daa960b43b8acc24dc467988
                    deleted: true
                    emailUser: admin@wasdk.pro
                error: {}
  /api/v1/instance/user/instance/createByOrder:
    post:
      tags:
        - instances management
      summary: Create new instance
      description: |-
        Параметр **period** может принимать значения:

        *   month1 - продлить инстанс на 1 месяц
        *   month3 - продлить инстанс на 3 месяца
        *   month6 - продлить инстанс на 6 месяцев
        *   month12 - продлить инстанс на 12 месяцев
        *   day1 - продлить инстанс на 1 день
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                tariff: DEVELOPER
                period: infinitely
      parameters:
        - name: x-ga-user-id
          in: header
          schema:
            type: string
          example: '{{user-id}}'
        - name: x-ga-user-token
          in: header
          schema:
            type: string
          example: '{{user-token}}'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.14.0 (Ubuntu)
            Date:
              schema:
                type: string
                example: Thu, 02 Dec 2021 03:22:59 GMT
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '131'
            Connection:
              schema:
                type: string
                example: keep-alive
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: X-Requested-With
            ETag:
              schema:
                type: string
                example: W/"83-F9JIXG37k4Py17NfjFvongW3Txg"
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: ok
                  value:
                    result: true
                    data:
                      idInstance: 1101000037
                      apiTokenInstance: 2be110d129b144ecb2a867e487daa960b43b8acc24dc467988
                    error: {}
                example-1:
                  summary: Not enough balance
                  value:
                    result: false
                    data: {}
                    error:
                      code: 464
                      description: Not enough balance
  /api/v1/instance/user/instance/extendByOrder:
    post:
      tags:
        - instances management
      summary: Extend instance
      description: |-
        Параметр **period** может принимать значения:

        *   month1 - продлить инстанс на 1 месяц
        *   month3 - продлить инстанс на 3 месяца
        *   month6 - продлить инстанс на 6 месяцев
        *   month12 - продлить инстанс на 12 месяцев
        *   day1 - продлить инстанс на 1 день
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                idInstance: 1101000001
                tariff: BUSINESS
                period: month1
      parameters:
        - name: x-ga-method
          in: header
          schema:
            type: string
          example: user.instance.extend
        - name: x-ga-user-id
          in: header
          schema:
            type: string
          example: '{{user-id}}'
        - name: x-ga-user-token
          in: header
          schema:
            type: string
          example: '{{user-token}}'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.14.0 (Ubuntu)
            Date:
              schema:
                type: string
                example: Mon, 10 Jan 2022 05:25:30 GMT
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '36'
            Connection:
              schema:
                type: string
                example: keep-alive
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: '*'
            ETag:
              schema:
                type: string
                example: W/"24-BPL2ef+9PW4p55KuHOuaGwKggRM"
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: ok
                  value:
                    result: true
                    data: {}
                    error: {}
                example-1:
                  summary: Not enough balance
                  value:
                    result: false
                    data: {}
                    error:
                      code: 464
                      description: Not enough balance
  /api/v1/instance/user/instance/delete:
    post:
      tags:
        - instances management
      summary: Delete instance
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                idInstance: 1101000864
      parameters:
        - name: x-ga-user-id
          in: header
          schema:
            type: string
          example: '{{user-id}}'
        - name: x-ga-user-token
          in: header
          schema:
            type: string
          example: '{{user-token}}'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.14.0 (Ubuntu)
            Date:
              schema:
                type: string
                example: Thu, 02 Dec 2021 03:23:48 GMT
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '36'
            Connection:
              schema:
                type: string
                example: keep-alive
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: X-Requested-With
            ETag:
              schema:
                type: string
                example: W/"24-BPL2ef+9PW4p55KuHOuaGwKggRM"
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: ok
                  value:
                    result: true
                    data: {}
                    error: {}
                example-1:
                  summary: Not found
                  value:
                    result: false
                    data: {}
                    error:
                      code: 404
                      description: Not found
  /api/v1/instance/user/instance/restore:
    post:
      tags:
        - instances management
      summary: Restore instance
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                idInstance: 1101000864
      parameters:
        - name: x-ga-user-id
          in: header
          schema:
            type: string
          example: '{{user-id}}'
        - name: x-ga-user-token
          in: header
          schema:
            type: string
          example: '{{user-token}}'
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.14.0 (Ubuntu)
            Date:
              schema:
                type: string
                example: Thu, 02 Dec 2021 03:23:48 GMT
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '36'
            Connection:
              schema:
                type: string
                example: keep-alive
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: X-Requested-With
            ETag:
              schema:
                type: string
                example: W/"24-BPL2ef+9PW4p55KuHOuaGwKggRM"
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: ok
                  value:
                    result: true
                    data: {}
                    error: {}
                example-1:
                  summary: Not found
                  value:
                    result: false
                    data: {}
                    error:
                      code: 404
                      description: Not found
